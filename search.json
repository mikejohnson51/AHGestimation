[{"path":"/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Mike Johnson Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"/articles/data-filtering.html","id":"data-filtering-functions","dir":"Articles","previous_headings":"","what":"Data Filtering Functions","title":"Data Preprocessing","text":"Often data comes long records stream observation noisy. Noise can come changes river , changes measurement methods, even measurement locations. FHG algorithm implemented package can deal noise hybrid OLS --> NLS --> NSGA2 --> combo fitting method, also possible, even advisable, filter data prior fitting. illustrate packaged methods. assumption filtering methods reduces dataset less 10 observations, warning shown input data returned.","code":""},{"path":"/articles/data-filtering.html","id":"median-absolute-deviation-mad","dir":"Articles","previous_headings":"Data Filtering Functions","what":"1. Median Absolute Deviation (mad)","title":"Data Preprocessing","text":"iterative outlier detection procedure can run iteritivly residuals linear regressions relationship following procedure described HyG dataset. Values log-transformed TW, V, Y residuals falling outside specified median absolute deviation (MAD) excluded pass outliers left. approach can implemented using mad_filter:","code":"data <- select(nwis, date, Q = Q_cms, Y = Y_m, TW = TW_m, V = V_ms)  mad_data <- mad_filter(data, envelope = 3)"},{"path":"/articles/data-filtering.html","id":"temporal","dir":"Articles","previous_headings":"Data Filtering Functions","what":"2. Temporal","title":"Data Preprocessing","text":"Rivers change time. minimize effects long-term channel evolution can advantageous limit records recent years. approach can implemented using date_filter. Users can specify number years keep (reference recent observation) whether maximum flow value kept regradless taken.","code":"date_data <- date_filter(data, years = 5, keep_max = TRUE)"},{"path":"/articles/data-filtering.html","id":"q-va-assumption","dir":"Articles","previous_headings":"Data Filtering Functions","what":"3. Q = vA Assumption","title":"Data Preprocessing","text":"One basic assumptions AHG relation Q = vA v velocity, cross sectional area, Q stream flow. qva_filter can used remove measurements grossly violate assumption. Within code, assumed product Y TW allowance can specific determines amount allows deviation equality. default allowance .05.","code":"qva_data <- qva_filter(data, allowance = .05)"},{"path":"/articles/data-filtering.html","id":"nls-prediciton","dir":"Articles","previous_headings":"Data Filtering Functions","what":"4. NLS prediciton","title":"Data Preprocessing","text":"development package became evident NLS approach, using OLS estimates seeds, provided best relation relation fit. approach fits NLS equations provided relationship. fit used predict [V,TW,Y] given Q’s. actual value outside specified allowance (default = +/- 50%) removed.","code":"nls_data <- nls_filter(data, allowance = 0.5)"},{"path":"/articles/data-filtering.html","id":"chaining-commands","dir":"Articles","previous_headings":"","what":"Chaining Commands","title":"Data Preprocessing","text":"Multiple filtering approaches can chained together isolate representative dataset complete archive. example, reduce complete dataset 10 year record respects Q=vA assumption data outside 3 MAD relation:","code":"xf <- data %>%    # Keep the most recent 10 year   date_filter(year = 10, keep_max = TRUE) %>%    # Keep data within 3 Median absolute deviations (log residuals)   mad_filter() %>%    # Keep data that respects the Q = vA criteria w/in allowance   qva_filter()"},{"path":"/articles/data-filtering.html","id":"examples","dir":"Articles","previous_headings":"","what":"Example(s)","title":"Data Preprocessing","text":"","code":"# Best attempt to mimic the HyG dataset hf_df <- data %>%    date_filter(5, keep_max = TRUE) %>%    qva_filter(allowance = .05) %>%    mad_filter(envelope = 3)   # NLS based filtering nls_df <- data %>%    date_filter(10, keep_max = TRUE) %>%    nls_filter(allowance = .5)    x1 <- ahg_estimate(df = data) x2 <- ahg_estimate(df = hf_df) x3 <- ahg_estimate(df = nls_df)"},{"path":"/articles/data-filtering.html","id":"significance","dir":"Articles","previous_headings":"","what":"Significance","title":"Data Preprocessing","text":"relationship supplied log transformed variables computed. p-value less supplied p-value error message emitted can assumed statistical relationship exists Q-{TW,V,Y}.","code":"s <- significance_check(data)"},{"path":"/articles/hydraulics.html","id":"hydraulic-estimation","dir":"Articles","previous_headings":"","what":"Hydraulic Estimation","title":"Hydraulic Data Generation","text":"primary application AHG relations hydraulic simulation approximation. AHG relationships useful translating one hydraulic variable estimate another, can used parameterize shape, roughness, behavior channel routing applications applications (e.g. see Heldmeyer 2019)","code":""},{"path":"/articles/hydraulics.html","id":"example-data","dir":"Articles","previous_headings":"Hydraulic Estimation","what":"Example data","title":"Hydraulic Data Generation","text":"Staring data examples, can retain last 10 year data apply NLS filter (see section data filtering )","code":"data <- nwis %>%    select(date, Q = Q_cms, Y = Y_m, TW = TW_m, V = V_ms) %>%    date_filter(10, keep_max = TRUE) %>%    nls_filter(allowance = .5)  glimpse(data) #> Rows: 85 #> Columns: 5 #> $ date <date> 1987-04-07, 2013-01-17, 2013-04-04, 2013-06-11, 2013-08-19, 2013… #> $ Q    <dbl> 317.1486864, 21.6907048, 40.2099227, 55.2178517, 8.8631731, 7.079… #> $ Y    <dbl> 3.7651748, 0.8401875, 1.1666478, 1.5349831, 0.5720217, 0.5648958,… #> $ TW   <dbl> 51.81600, 35.05200, 35.35680, 33.83280, 22.25040, 22.86000, 21.85… #> $ V    <dbl> 1.624584, 0.737616, 0.975360, 1.063752, 0.697992, 0.545592, 0.466…"},{"path":"/articles/hydraulics.html","id":"compute-roughness","dir":"Articles","previous_headings":"Hydraulic Estimation","what":"Compute Roughness","title":"Hydraulic Data Generation","text":"Roughness defines friction exerted stream bed water flowing . One way estimate roughness solve Manning’s equation: n=R2/3S1/2V n = \\frac{R^{2/3}S^{1/2}}{V} V velocity, R hydraulic radius S longitudinal slope. can use smoothed reach-scale longitudinal slopes NHDPlusv2 extracting value gage used combining NLDI get_vaa() capabilities nhdplusTools. Following assumptions made HyG Dataset use median depth (Y) approximation R, median Velocity (V) field measurement record. Thus, report roughness approximates historical median measured flow gage.","code":"# channel slope extracted from NHDPlusV2 for corresponding location (n <- compute_n(data, S = 0.015)) #> [1] 0.1394096"},{"path":"/articles/hydraulics.html","id":"compute-r-d-r-and-p","dir":"Articles","previous_headings":"Hydraulic Estimation","what":"Compute r, d, R and p","title":"Hydraulic Data Generation","text":"Dingman (2018) presented analytic derivations AHG parameters AHG coefficients related cross-section hydraulics geometry. Specifically 4 variables called :","code":""},{"path":"/articles/hydraulics.html","id":"r","dir":"Articles","previous_headings":"Hydraulic Estimation > Compute r, d, R and p","what":"r","title":"Hydraulic Data Generation","text":"exponent r reflects cross-section shape triangle represented r = 1, ‘Lane Type B stable channel’ (Henderson, 1966) r ≈1.75, parabola r = 2. r →∞, channel becomes rectangular (Fig. 1). value r can computed : r=f/b r = f/b Figure 1","code":""},{"path":"/articles/hydraulics.html","id":"p-q-k","dir":"Articles","previous_headings":"Hydraulic Estimation > Compute r, d, R and p","what":"p, q, k","title":"Hydraulic Data Generation","text":"exponent p (along q) exist Chézy Manning uniform-flow equations. Chézy, p = 1/2 Manning’s, p = 2/3 Chézy Manning q = 1/2. Since neither equation generally dimensionally correct require unit adjustments. several studies indicated p q different values assumed Chézy/Manning relations [e.g. Riggs (1976), Dingman Sharma (1997), Bjerklie et al. (2005), Lopez et al. (2007), Ferguson (2007), Ferguson (2010)]. p can computed : p=m/f p = m/f general determination κ p channel characteristics (especially slope boundary roughness) central problem open-channel hydraulics resisted simple solution. practice, coefficient κ exponent p can determined regression ln(V) ln(Y)","code":"compute_ahg(Q = data$Y,  P = data$V, type = \"kp\")[1,] %>%    rename(k = coef, p = exp) #>   type         p        k nrmse   pb method #> 1   kp 0.5974488 0.781589  8.43 0.56    nls"},{"path":"/articles/hydraulics.html","id":"d-r","dir":"Articles","previous_headings":"Hydraulic Estimation > Compute r, d, R and p","what":"d, R","title":"Hydraulic Data Generation","text":"dand R derived parameters critical Dingman’s analytical expressions (Dingman 2018). based r p R≡(1+r)/r R ≡ (1 + r)/r d≡1+r+rp d ≡ 1 + r + rp estimate suite parameters, provide compute_hydraulic_params","code":"fit <- ahg_estimate(data)[1,] fit <- compute_hydraulic_params(fit)  t(fit) #>            1 #> r  2.9348425 #> p  0.6014734 #> d  5.7000720 #> R  1.3407338 #> bd 0.1754364 #> fd 0.5148781 #> md 0.3096855"},{"path":"/articles/hydraulics.html","id":"implications","dir":"Articles","previous_headings":"Hydraulic Estimation","what":"Implications","title":"Hydraulic Data Generation","text":"r determined channel cross-section geometry p cross-section hydraulic relation, can write AHG relations terms channel hydraulics geometry: W=BFWr+(r*p)*(BFD/R)−(1+p)/d*Q1/d W = BFW^{r+(r*p)} * (BFD/ R)^{-(1+p) / d} * Q^{1/d} Y=BFWr/d*(BFD/R)1/d*κ−r/d*Q1/d Y = BFW^{r/d} * (BFD/ R)^{1 / d} * κ^{-r/d} * Q^{1/d} V=BFW−(r*p)/d*(BFD/R)p/d*κ(1+r)/d*Q(−r*p)/d V = BFW^{-(r*p)/d} * (BFD/ R)^{p / d} * κ^{(1+r)/d} * Q^{(-r*p)/d}","code":""},{"path":"/articles/hydraulics.html","id":"generate-cross-sections","dir":"Articles","previous_headings":"Hydraulic Estimation","what":"Generate Cross sections","title":"Hydraulic Data Generation","text":"","code":"cs <- cross_section(r = fit$r,                      TW = max(data$TW),                      Ymax = max(data$Y))  head(cs) #>   ind        x         Y         A #> 1   1 0.000000 0.7933300 29.521578 #> 2   2 1.758621 0.6479128 22.394044 #> 3   3 3.517241 0.5212662 16.634039 #> 4   4 5.275862 0.4121338 12.056481 #> 5   5 7.034483 0.3192528  8.489295 #> 6   6 8.793103 0.2413536  5.773491"},{"path":"/articles/improved-ahg.html","id":"increasing-ahg-skill","dir":"Articles","previous_headings":"","what":"Increasing AHG skill:","title":"Improving AHG Estimates","text":"last section saw traditional OLS based fit sample data provided solution met continuity, , large amount error. section explore alternative methods see","code":""},{"path":"/articles/improved-ahg.html","id":"curve-fitting-approaches","dir":"Articles","previous_headings":"","what":"Curve Fitting Approaches","title":"Improving AHG Estimates","text":"fitting nonlinear curve set data, options : (1) linearize relationship transforming data; (2) fit polynomial spline data; (3) fit nonlinear function. emphasis interoperable power law relations, linear (1) nonlinear (3) approaches appropriate. Nonlinear Least Square (NLS) regression provides flexible curve fitting iterative optimization. NLS approaches require specified starting value unknown parameter ensure solver converges global rather local minimum. suboptimal starting values provided, NLS solvers may converge local minimum, , .","code":""},{"path":"/articles/improved-ahg.html","id":"ols","dir":"Articles","previous_headings":"Curve Fitting Approaches","what":"OLS","title":"Improving AHG Estimates","text":"","code":"ols <- function(X, Y, name = NA){   fit <- lm(log(Y) ~ log(X))   data.frame(coef = exp(fit$coefficients[1]),              exp  = fit$coefficients[2],              name = name,              row.names = NULL) }  (ols_fit <- bind_rows(         ols(data$Q, data$Y, \"Y\"),         ols(data$Q, data$TW, \"TW\"),         ols(data$Q, data$V, \"V\"))%>%      mutate(method = \"ols\")) #>         coef       exp name method #> 1  0.2018376 0.4794202    Y    ols #> 2 22.6153841 0.1145234   TW    ols #> 3  0.2178592 0.4056932    V    ols  sum(ols_fit$exp) #> [1] 0.9996368 prod(ols_fit$coef) #> [1] 0.9944476  olsP <- data %>%    mutate(Yp  = ols_fit$coef[1] * (Q ^ ols_fit$exp[1]),          TWp = ols_fit$coef[2] * (Q ^ ols_fit$exp[2]),          Vp  = ols_fit$coef[3] * (Q ^ ols_fit$exp[3]))           ols_e <- data.frame(   Ye  = nrmse(olsP$Y, olsP$Yp),   TWe = nrmse(olsP$TW, olsP$TWp),   Ve  = nrmse(olsP$V, olsP$Vp)) %>%    mutate(tot_error = Ye + TWe + Ve, type = \"OLS\")"},{"path":"/articles/improved-ahg.html","id":"nls","dir":"Articles","previous_headings":"Curve Fitting Approaches","what":"NLS","title":"Improving AHG Estimates","text":"","code":"nls <- function(X, Y, coef, exp, name = NA){   s <-  summary(suppressWarnings({     stats::nls(Y ~ alpha * X ^ x,         start = list(alpha = coef, x = exp),          trace = FALSE,         control = nls.control(maxiter = 50, tol=1e-09,  warnOnly=TRUE))   }))      data.frame(coef = s$coefficients[1,1],              exp  = s$coefficients[2,1],              name = name,              row.names = NULL) }  (nls_fit <- bind_rows(         nls(X = data$Q,              Y = data$Y,               coef = ols_fit$coef[1],              exp = ols_fit$exp[1],             \"Y\"),         nls(X = data$Q,              Y = data$TW, coef = ols_fit$coef[2],              exp = ols_fit$exp[2],              \"TW\"),         nls(X = data$Q,              Y = data$V,  coef = ols_fit$coef[3],              exp = ols_fit$exp[3],              \"V\")) %>%      mutate(method = \"nls\")) #>         coef       exp name method #> 1  0.1867125 0.5190562    Y    nls #> 2 22.7934449 0.1166774   TW    nls #> 3  0.2898890 0.3246968    V    nls  sum(nls_fit$exp) #> [1] 0.9604304 prod(nls_fit$coef) #> [1] 1.233716  nlsP <- data %>%    mutate(Yp  = nls_fit$coef[1] * (Q ^ nls_fit$exp[1]),          TWp = nls_fit$coef[2] * (Q ^ nls_fit$exp[2]),          Vp  = nls_fit$coef[3] * (Q ^ nls_fit$exp[3]),          method = \"nls\")           nls_e <- data.frame(   Ye  = nrmse(nlsP$Y, nlsP$Yp),   TWe = nrmse(nlsP$TW, nlsP$TWp),   Ve  = nrmse(nlsP$V, nlsP$Vp) ) %>%    mutate(tot_error = Ye + TWe + Ve, type = \"NLS\")"},{"path":"/articles/improved-ahg.html","id":"nsga-ii","dir":"Articles","previous_headings":"","what":"NSGA-II","title":"Improving AHG Estimates","text":"","code":"allowance <- 0.05  # x assumed to be ordered as: k, m, a, b, c, f objective_function <- function(x) {       v <- nrmse(x[1]*data$Q^x[2], data$V)        t <- nrmse(x[3]*data$Q^x[4], data$TW)        d <- nrmse(x[5]*data$Q^x[6], data$Y)        return(c(v,t,d)) }  constraint <- function(x) {     return(c((1 + allowance) - (x[1] * x[3] * x[5]),              (x[1] * x[3] * x[5]) - (1 - allowance),              (1 + allowance) - (x[2] + x[4] + x[6]),              (x[2] + x[4] + x[6]) - (1 - allowance))) } set.seed(10291991)  res <- nsga2(       objective_function,       constraints   = constraint,       # 6 inputs, 3 outputs, 4 constraints       idim = 6, odim = 3, cdim = 4,       # Bounds determined from literature       lower.bounds  = c(0, 0, 0, 0, 0, 0),       upper.bounds  = c(3.5, 1, 642, 1, 20, 1),       # Defaults we've chosen       generations   = 200,       popsize       = 32,       cprob = .5,       mprob = .1) vals <- res$value[res$pareto.optimal, ] vals <- vals[!duplicated(vals), ]  par  <- res$par[res$pareto.optimal, ] par  <- par[!duplicated(par), ]  ahg <- par[which.min(rowSums(vals)),]  nsga_fit <- data.frame(coef = ahg[c(1,3,5)], exp = ahg[c(2,4,6)],                         name = c(\"V\", \"TW\", \"Y\"),                         method = \"nsga2\")  nsgs_e <- data.frame(   Ve = nrmse((ahg[1] * data$Q ^ ahg[2]), data$V) ,   TWe = nrmse((ahg[3] * data$Q ^ ahg[4]), data$TW),    Ye = nrmse((ahg[5] * data$Q ^ ahg[6]), data$Y),   type = \"nsga2\") %>%    mutate(tot_error = Ve + TWe + Ye)"},{"path":"/articles/improved-ahg.html","id":"combination-approach","dir":"Articles","previous_headings":"","what":"Combination Approach","title":"Improving AHG Estimates","text":"","code":"d <- bind_rows(ols_fit, nls_fit, nsga_fit) r <- split(d, f = d$name)    fit <-  function(g, ind, V, TW, Y, Q, allowance = .05) {     x <- g[ind,]     g$V_error[ind] <-  nrmse(x$V_coef*(Q^x$V_exp), V)     g$TW_error[ind] <- nrmse(x$TW_coef*(Q^x$TW_exp), TW)     g$Y_error[ind] <-  nrmse(x$Y_coef*(Q^x$Y_exp), Y)      c1 <- round(g$V_coef[ind] * g$Y_coef[ind] * g$TW_coef[ind], 3)     c2 <- round(g$V_exp[ind] + g$Y_exp[ind] + g$TW_exp[ind], 3)     g$viable[ind] <-  (between(c1, 1-allowance, 1+allowance) +                          between(c2, 1-allowance, 1+allowance)) == 2     return(g) }      names <- c(\"V\", \"TW\", \"Y\")  g <- rep(list(c(\"ols\", \"nls\", \"nsga2\")), 3) %>%      expand.grid() %>%      setNames(paste0(names, \"_method\")) %>%      mutate(viable = NA, tot_error = NA) %>%      bind_cols(setNames(data.frame(matrix(NA, ncol = 9, nrow =27)),                            c(paste0(names, \"_error\"),                              paste0(names, \"_coef\"),                              paste0(names, \"_exp\"))))     for(t in 1:3){     x <- g[[paste0(names[t], \"_method\")]]     ind <- match(x, r[[names[t]]]$method)          g[[paste0(names[t], '_exp')]] <- r[[names[t]]]$exp[ind]     g[[paste0(names[t], '_coef')]] <- r[[names[t]]]$coef[ind] }  for(i in seq(nrow(g))){ g <- fit(g, i, data$V, data$TW, data$Y, data$Q)}  g$tot_error <- rowSums(g[, grepl(\"error\", names(g))], na.rm = TRUE)  combo <- filter(g, viable == TRUE) %>%        slice_min(tot_error) %>%        mutate(condition = \"bestValid\")      ols <- filter(g, Y_method == \"ols\", TW_method == \"ols\", V_method == \"ols\") %>%        mutate(condition = \"ols\")      nls <- filter(g, Y_method == \"nls\", TW_method == \"nls\", V_method == \"nls\") %>%        mutate(condition = \"nls\")    nsga <- filter(g,                 Y_method == \"nsga2\",                 TW_method == \"nsga2\",                 V_method == \"nsga2\") %>%          mutate(condition = \"nsga2\")  summary <- bind_rows(combo, ols, nls, nsga) %>%             arrange(!viable, tot_error)"},{"path":"/articles/improved-ahg.html","id":"packaged-functionality","dir":"Articles","previous_headings":"","what":"Packaged Functionality","title":"Improving AHG Estimates","text":"workflow follows diagram:  can executed like : NOTE Single relationships can also fit like :","code":"ahg <- ahg_estimate(data) ahg_estimate(select(data, Q, Y)) #>   type       exp      coef nrmse    pb method #> 1    Y 0.5190562 0.1867125  7.90 -0.23    nls #> 2    Y 0.4794202 0.2018376  8.11 -5.58    ols"},{"path":"/articles/optimize-nsga2.html","id":"solver","dir":"Articles","previous_headings":"","what":"Solver","title":"Fine Tuning NSGA-2","text":"use NSGA-2 prior experiments showed solving AHG relationship, mass conserving way, often multi-criterion problem Pareto front solutions.","code":""},{"path":"/articles/optimize-nsga2.html","id":"defining-bounds","dir":"Articles","previous_headings":"","what":"Defining bounds","title":"Fine Tuning NSGA-2","text":"NSGA solver requests (doesn’t require) set lower upper limits search. Setting helps limit search space, therefore returns skilled solution quickly (). method setting bounds follows: Fit NLS individual relation prior work showed every case NLS (seeded OLS solutions) provides best estimation individual relationship often fails meet continuity. Scale set factor limits exponent coefficients range {(1/scale) * nls; scale * nls}  default scale 1.5, left NULL respective parameters limits set maximums (+10%) found Asfari 2018.","code":""},{"path":"/articles/optimize-nsga2.html","id":"parameterizing-the-model","dir":"Articles","previous_headings":"","what":"Parameterizing the model","title":"Fine Tuning NSGA-2","text":"Fine tuning evolutionary algorithm balancing act time converge accuracy. NSGA-2 model 4 parameters can tuned: Population Size: many solutions created generation Generation: many generations created Cross probability: Determines likelihood crossover occur two parent solutions. Mutation probability: Determines likelihood individual undergo mutation process","code":""},{"path":"/articles/optimize-nsga2.html","id":"population-generation","dir":"Articles","previous_headings":"","what":"Population & Generation","title":"Fine Tuning NSGA-2","text":"First try identify optimal population generation size problem holding cross mutation probabilities constant middle value total grid. , build text matrix generation population sizes, use default mprob cprob (seed 1). plot table show solutions balance % gain “best” solution time solve. effective Pareto front solutions colored labeled equally valid solutions depending desired goal (maximum speed, minimal error, balance)","code":"seed  <- 1 mprob <- c(.2) cprob <- c(.7) gen   <- c(16, 24, 32, 48, 96, 144, 192) pop   <- c(100, 200, 300, 500, 700, 1000)"},{"path":"/articles/optimize-nsga2.html","id":"cross-over-and-mutation-probability","dir":"Articles","previous_headings":"","what":"Cross over and Mutation Probability","title":"Fine Tuning NSGA-2","text":"Next, using idealized generation population size, can turn two probabilistic inputs: Cross Mutation , tested 15 combinations (3 probabilities, 5 gen/pop combinations) 25 gauged locations. plot () shows mean error combination across 25 locations mean time converge. Plot (B) shows mean variance grouping mean time converge.","code":"# high crossover, low mutation c(.8, .05)  # high-ish crossover, low-ish mutation (nearly mco default) c(.6, .2)  # moderate crossover, moderate mutation c(.4, .4)"},{"path":"/articles/optimize-nsga2.html","id":"winner","dir":"Articles","previous_headings":"Cross over and Mutation Probability","what":"Winner","title":"Fine Tuning NSGA-2","text":"winner moderate crossover mutation probability matrix small population size large generation count: Combination 15:  pop = 200; gen = 192; cprob =     0.4; mprob =    0.4","code":""},{"path":"/articles/optimize-nsga2.html","id":"influence-of-seed","dir":"Articles","previous_headings":"","what":"Influence of Seed","title":"Fine Tuning NSGA-2","text":"way get repeatable results algorithm like nsga2 set seed. illustrate , ensure solution found overly sensitive seed, ran algorithm 100 times using seeds 1 - 100. Overall, 96% tests fell within 2.5% best solutions error. total range 0.76 total nRMSE across solutions. give us confidence solution space defined adequate solving problem general way.","code":""},{"path":"/articles/optimize-nsga2.html","id":"flexibility","dir":"Articles","previous_headings":"","what":"Flexibility","title":"Fine Tuning NSGA-2","text":"Certainly, end solution different objectives might want different solutions. case following options exposed ahg_estimate: times: represents number times solution run different seeds (1:n()) exposed ahg_estimate gen: Number generations breed. pop: Size population cprob: Crossover probability mprob: Mutation probability","code":""},{"path":"/articles/traditonal-ahg.html","id":"the-ahg-relationships","dir":"Articles","previous_headings":"","what":"The AHG relationships","title":"Traditional AHG fitting","text":"idea hydraulic geometry introduced Leopold Maddock (1953) concept ‘--station hydraulic geometry’ (AHG) provides three power laws relate water-surface width (TW), average depth (Y), average velocity (V) stream flow (Q) given river cross section: TW=⋅Qb TW =  \\cdot Q^b Y=c⋅Qf Y = c \\cdot Q^f V=k⋅Qm V = k \\cdot Q^m set AHG relations applies within-bank flows specific cross section assumes channel characteristics change sensibly discharge. assumptions, continuity dictates water gained lost system : Q=TW·Y·V Q = TW·Y·V therefore: b+f+m=·c·k=1 b + f + m =  ·c·k = 1 practice, enforcement continuity determined quality data, enforced estimation AHG relationships.","code":""},{"path":"/articles/traditonal-ahg.html","id":"traditonal-fitting-technique","dir":"Articles","previous_headings":"The AHG relationships","what":"Traditonal Fitting Technique","title":"Traditional AHG fitting","text":"AHG power laws provide elegant theory representing mass-constrained hydraulic system, data available determine relations rarely clean. cases, hydraulic data reported table(s) relating values Q values one hydraulic variables. Thus, relationships require power law relationships fit, AHG relations historically fit using OLS logarithmic transformation variables, exponential intercept provides power law coefficient, slope linear model provides exponent. Several studies highlighted potential problem using approach given log transformed values back-transformed, estimates effectively medians, means estimates, resulting general low bias.","code":""},{"path":"/articles/traditonal-ahg.html","id":"example","dir":"Articles","previous_headings":"The AHG relationships","what":"Example:","title":"Traditional AHG fitting","text":"","code":"data <- select(AHGestimation::nwis, date, Q = Q_cms, Y = Y_m, TW = TW_m, V = V_ms)  fit <- lm(log(data$Y) ~ log(data$Q))    (coef <- exp(fit$coefficients[1])) #> (Intercept)  #>   0.2018376  (exp  <- fit$coefficients[2]) #> log(data$Q)  #>   0.4794202"},{"path":"/articles/traditonal-ahg.html","id":"full-fits","dir":"Articles","previous_headings":"The AHG relationships > Example:","what":"Full Fits","title":"Traditional AHG fitting","text":"","code":"ols <- function(X, Y, name = NA){   fit <- lm(log(Y) ~ log(X))   data.frame(coef = exp(fit$coefficients[1]),              exp  = fit$coefficients[2],              name = name,              row.names = NULL) }  (x <- bind_rows(         ols(data$Q, data$Y, \"Y\"),         ols(data$Q, data$TW, \"TW\"),         ols(data$Q, data$V, \"V\"))) #>         coef       exp name #> 1  0.2018376 0.4794202    Y #> 2 22.6153841 0.1145234   TW #> 3  0.2178592 0.4056932    V"},{"path":"/articles/traditonal-ahg.html","id":"continuity-check","dir":"Articles","previous_headings":"The AHG relationships > Example:","what":"Continuity check","title":"Traditional AHG fitting","text":"","code":"sum(x$exp)  #> [1] 0.9996368 prod(x$coef) #> [1] 0.9944476"},{"path":"/articles/traditonal-ahg.html","id":"system-error","dir":"Articles","previous_headings":"The AHG relationships > Example:","what":"System Error","title":"Traditional AHG fitting","text":"","code":"data <- data %>%    mutate(Yp  = x$coef[1] * (Q ^ x$exp[1]),          TWp = x$coef[2] * (Q ^ x$exp[2]),          Vp  = x$coef[3] * (Q ^ x$exp[3]))           err <- data.frame(   Ye  = nrmse(data$Y, data$Yp),   TWe = nrmse(data$TW, data$TWp),   Ve  = nrmse(data$V, data$Vp) ) %>%    mutate(tot_error = Ye + TWe + Ve, type = \"OLS\")"},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mike Johnson. Author, maintainer. Arash Modaresi Rad. Contributor. . Funder. . Funder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Johnson M (2024). AHGestimation: R package Computing Robust, Mass Preserving Hydraulic Geometries Rating Curves. R package version 0.3.1, https://github.com/mikejohnson51/AHGestimation.","code":"@Manual{,   title = {AHGestimation: An R package for Computing Robust, Mass Preserving Hydraulic Geometries and Rating Curves},   author = {Mike Johnson},   year = {2024},   note = {R package version 0.3.1},   url = {https://github.com/mikejohnson51/AHGestimation}, }"},{"path":[]},{"path":"/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Computing robust, mass preserving hydraulic geometries and rating curves","text":"","code":"# install.packages(\"remotes\") remotes::install_github(\"mikejohnson51/AHGestimation\")"},{"path":"/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Computing robust, mass preserving hydraulic geometries and rating curves","text":"behavior river system location can represented relationship discharge (Q), mean depth (Y), mean velocity (V), mean top width (TW). measurements long period time, relationship much water (Q) channel corresponding Y, V, TW can established. idea ‘--station hydraulic geometry’ (AHG) suggests three power laws can adequately describe relations (Leopold Maddock 1953): TW=⋅Qb TW =  \\cdot Q^b Y=c⋅Qf Y = c \\cdot Q^f V=k⋅Qm V = k \\cdot Q^m single relationships describes component channel behavior (see section Fitting single relationships). example, Q-Y relation similar traditional rating curve relates stage discharge stage given height water (H) datum (Ho). Q=c⋅(H−Ho)f Q = c \\cdot (H - H_o)^f Traditionally, relationship fit independent one another using ordinary least square regression (OLS) log transformed time series respective components. research moved beyond pure OLS fitting (typically) singular focus rating curve relation. example Texas Water Resources Institute suggests non linear least squares regression (NLS) (), Bayesian hierarchical modeling shown cases beneficial ((Hrafnkelsson et al. 2022), R implementation ) trying fit hydraulic system - - three equations - additional considerations . Notably continuity dictates water gained lost : Q=TW·Y·V Q = TW·Y·V : (b+f+m)=(·c·k)=1 (b + f + m) =  (·c·k) = 1 Critically, neither OLS NLS solvers can ensure characteristic solution. (see Fitting hydraulic systems article). Instead, can achieved either Preprocessing data based thresholds (see Enzminger (2023) Afshari et al. (2017)) (see AHGestimation functions ), suggest package, using evolutionary solver - along OLS NLS fits - optimally solve relationships accordance (see detailed description ). aim package provide increased AHG fitting flexibility, ensures mass conservation hydraulic systems, optimal curve fitting single relations.","code":""},{"path":"/index.html","id":"ahgestimation","dir":"","previous_headings":"","what":"AHGestimation","title":"Computing robust, mass preserving hydraulic geometries and rating curves","text":"Using USGS field measurements gage (National Water Information System NWIS site) located Nashua River East Pepperell, MA can illustrate 4 capabilities package offers: Fitting single relations OLS NLS (Fitting single relationships) Estimating hydraulic system mass conserving ensemble fitting method (Fitting hydraulic systems) Data preprocessing (removing outliers based defined criteria) (Data Filtering) Deriving cross section shapes traits AHG fits (Hydraulic Shape Estimation). example data included package, development can seen .","code":"library(AHGestimation) glimpse(nwis) #> Rows: 275 #> Columns: 6 #> $ siteID <chr> \"01096500\", \"01096500\", \"01096500\", \"01096500\", \"01096500\", \"01… #> $ date   <date> 1984-11-14, 1985-01-04, 1985-05-06, 1985-06-26, 1986-01-09, 19… #> $ Q_cms  <dbl> 9.740995, 11.893076, 10.817036, 1.945367, 11.355056, 21.435853,… #> $ Y_m    <dbl> 0.5276643, 0.6263470, 0.5952224, 0.2400299, 0.5920151, 0.857459… #> $ V_ms   <dbl> 0.652272, 0.682752, 0.563880, 0.332232, 0.606552, 0.902208, 0.4… #> $ TW_m   <dbl> 28.3464, 27.7368, 32.3088, 24.3840, 31.6992, 27.7368, 31.6992, …"},{"path":"/index.html","id":"fitting-single-relationships","dir":"","previous_headings":"","what":"Fitting single relationships","title":"Computing robust, mass preserving hydraulic geometries and rating curves","text":"AHGestimation::ahg_estimate(...) function can used fit single relationships using NLS OLS solutions. fit Q-Y relation passing data.frame column names Q Y. columns included input, Q, Y, V, /TW used. returned object rank sorts solutions based nrmse simulated Y values compared input data. convenience, pBias also reported. , can see variation NLS (blue) OLS (red) solutions.  2 relationships (e.g. Q-Y Q-V) passed ahg_estimate(...) default behavior return single solution based minimum nrmse. Since 2 3 hydraulic traits passed, mass conservation checked . like fits (OLS NLS), full_fitting parameter can set TRUE.","code":"(sf = nwis %>%    #input column names must be Q,Y,V and/or TW    select(date, Q = Q_cms, Y = Y_m) %>%     ahg_estimate()) #>   type       exp      coef nrmse    pb method #> 1    Y 0.5190562 0.1867125  7.90 -0.23    nls #> 2    Y 0.4794202 0.2018376  8.11 -5.58    ols (nwis %>%    #input column names must be Q,Y,V and/or TW    select(Q = Q_cms, Y = Y_m, V = V_ms) %>%     ahg_estimate()) #>   V_method Y_method tot_nrmse   V_nrmse   Y_nrmse   V_coef    Y_coef     V_exp #> 1      nls      nls 0.6787807 0.2312688 0.4475119 0.289889 0.1867125 0.3246968 #>       Y_exp #> 1 0.5190562 (nwis %>%    #input column names must be Q,Y,V and/or TW    select(Q = Q_cms, Y = Y_m, V = V_ms) %>%     ahg_estimate(full_fitting = TRUE)) #> $full_fits #>   V_method Y_method tot_nrmse   V_nrmse   Y_nrmse    V_coef    Y_coef     V_exp #> 1      nls      nls 0.6787807 0.2312688 0.4475119 0.2898890 0.1867125 0.3246968 #> 2      ols      ols 0.7127124 0.2534246 0.4592878 0.2178592 0.2018376 0.4056932 #>       Y_exp #> 1 0.5190562 #> 2 0.4794202 #>  #> $summary #>   V_method Y_method tot_nrmse   V_nrmse   Y_nrmse   V_coef    Y_coef     V_exp #> 1      nls      nls 0.6787807 0.2312688 0.4475119 0.289889 0.1867125 0.3246968 #>       Y_exp #> 1 0.5190562"},{"path":"/index.html","id":"fitting-hydraulic-systems","dir":"","previous_headings":"","what":"Fitting hydraulic systems","title":"Computing robust, mass preserving hydraulic geometries and rating curves","text":"data three hydraulic relationships can ensure solutions found meet continuity/conserve mass. mode OLS NLS models fit first, continuity met best solution (e.g. lowest nmse), Evolutionary Approach (nsga2; Mersmann (2020)) implemented (see article details). produces three unique fits relationship (27 total combinations). crossed identify best performing solution meets continuity prescribed allowance. allowance specifies amount continuity expression can deviate 1. can found vignette , results rank ordered minimum nrmse viability (viable = solution meet continuity within prescribed allowance?) Overall combination NLS nsga2 provides error minimizing, viable solution:","code":"(x = nwis %>%     select(Q = Q_cms, Y = Y_m, V = V_ms, TW = TW_m) %>%     ahg_estimate(allowance = .05)) #>   V_method TW_method Y_method    c1    c2 viable tot_nrmse   V_nrmse  TW_nrmse #> 1      nls       nls    nsga2 1.048 0.997   TRUE 0.8478575 0.2312688 0.1665577 #> 2    nsga2     nsga2    nsga2 1.042 0.997   TRUE 0.8480158 0.2314216 0.1665631 #> 3      ols       ols      ols 0.994 1.000   TRUE 0.8799006 0.2534246 0.1671882 #> 4      nls       nls      nls 1.234 0.960  FALSE 0.8453383 0.2312688 0.1665577 #>     Y_nrmse    V_coef  TW_coef    Y_coef     V_exp    TW_exp     Y_exp #> 1 0.4500311 0.2898890 22.79344 0.1586042 0.3246968 0.1166774 0.5560598 #> 2 0.4500311 0.2874600 22.86035 0.1586042 0.3248796 0.1160671 0.5560598 #> 3 0.4592878 0.2178592 22.61538 0.2018376 0.4056932 0.1145234 0.4794202 #> 4 0.4475119 0.2898890 22.79344 0.1867125 0.3246968 0.1166774 0.5190562 #>   condition #> 1 bestValid #> 2     nsga2 #> 3       ols #> 4       nls"},{"path":"/index.html","id":"data-filtering","dir":"","previous_headings":"","what":"Data Filtering","title":"Computing robust, mass preserving hydraulic geometries and rating curves","text":"Due volatility river systems, hydraulic data often noisy. ahg_estimate tool intended reduce noise produce mass-conserving hydraulic fit, also possible filter data prior fitting. range data filtering options provided documented data-filtering vignette example provided : Ultimately recommend selecting fits conserve mass (viable = TRUE) lowest error (tot_nrmse, V_nrmse, TW_nrmse, Y_nrmse) depending use case. data effectively filtered see NLS can provide error minimizing, valid solution system quite different full data fit. , nsga2 algorithm need invoked:","code":"filtered_data = nwis %>%    select(date, Q = Q_cms, Y = Y_m, V = V_ms, TW = TW_m) %>%    # Keep the most recent 10 year   date_filter(year = 10, keep_max = TRUE) %>%    # Keep data within 3 Median absolute deviations (log residuals)   mad_filter() %>%    # Keep data that respects the Q = vA criteria w/in allowance   qva_filter()   (ahg_fit = ahg_estimate(filtered_data)) #>   V_method TW_method Y_method    c1 c2 viable tot_nrmse   V_nrmse  TW_nrmse #> 1      nls       nls      nls 1.012  1   TRUE 0.3443460 0.1434527 0.1022593 #> 2      nls       nls      nls 1.012  1   TRUE 0.3443460 0.1434527 0.1022593 #> 3      ols       ols      ols 0.998  1   TRUE 0.4456573 0.1908811 0.1039403 #>      Y_nrmse    V_coef  TW_coef    Y_coef     V_exp    TW_exp     Y_exp #> 1 0.09863406 0.2812859 18.50099 0.1945125 0.3181974 0.1717161 0.5099640 #> 2 0.09863406 0.2812859 18.50099 0.1945125 0.3181974 0.1717161 0.5099640 #> 3 0.15083589 0.2099045 19.19159 0.2478285 0.4124677 0.1567236 0.4312825 #>   condition #> 1 bestValid #> 2       nls #> 3       ols"},{"path":"/index.html","id":"hydraulic-shape-estimation","dir":"","previous_headings":"","what":"Hydraulic Shape Estimation","title":"Computing robust, mass preserving hydraulic geometries and rating curves","text":"Lastly, range functions added extend AHG parameters cross section hydraulics geometry. come primarily (Dingman Afshari 2018) described detail particular note, r value describes theoretical shape channel ranging triangle (r = 1) rectangle (r = ∞). paired TW Depth (assuming max record) generalized cross section can derived. returned data.frame provide point index (left bank looking upstream) associated relative x absolute Y position, cross sectional area Y.","code":"# Compute hydraulic parameters (hydraulic_params = compute_hydraulic_params(ahg_fit)) #>          r         p        d        R        bd        fd        md #> 1 2.969809 0.6239605 5.822852 1.336722 0.1717371 0.5100265 0.3182364 #> 2 2.969809 0.6239605 5.822852 1.336722 0.1717371 0.5100265 0.3182364 #> 3 2.751866 0.9563746 6.383682 1.363390 0.1566494 0.4310783 0.4122723  # Estimate roughness # Slope is taken from the NHD reach associated with our gage compute_n(filtered_data, S = 0.01463675) #> [1] 0.1385395 cs = cross_section(r = hydraulic_params$r,                      TW   = max(filtered_data$TW),                     Ymax = max(filtered_data$Y))  glimpse(cs) #> Rows: 90 #> Columns: 4 #> $ ind <int> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,… #> $ x   <dbl> 0.0000000, 0.5730337, 1.1460674, 1.7191011, 2.2921348, 2.8651685, … #> $ Y   <dbl> 0.87421950, 0.77874613, 0.77874613, 0.72304562, 0.63446965, 0.6344… #> $ A   <dbl> 32.842929, 28.051288, 28.051288, 25.351314, 21.214316, 21.214316, …"},{"path":"/index.html","id":"history","dir":"","previous_headings":"","what":"History","title":"Computing robust, mass preserving hydraulic geometries and rating curves","text":"development package began graduate school project friends UC Santa Barbara UMass Amherst following 2017 NOAA OWP Summer Institute clear evidence channel shape may limiting factor National Water Model Performance. since evolved provide open source utility robust large scale data synthesis evaluation. Funding National Science Foundation (Grants 1937099, 2033607) provided time draft Johnson et al. (2022) apply early version software [Continental Flood Inundation Mapping (CFIM) synthetic rating curve dataset (Liu Maidment 2020). Funding National Oceanic Atmospheric Administration’s Office Water Prediction supported addition data filtering hydraulic estimation, improved documentation, code improvement grateful involved.","code":""},{"path":"/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Computing robust, mass preserving hydraulic geometries and rating curves","text":"First, thanks considering contribution! hope make package community created resource! Please attempt describe want prior contributing submitting issue. Please follow typical github fork - pull-request workflow. Contributions tested testthat running devtools::test(). Code style attempt follow tidyverse style guide. Make sure use roxygen run devtools::check() contributing. notes: Consider running goodpractice::gp() package contributing. Consider running devtools::spell_check() devtools::document() wrote documentation. Consider running devtools::build_readme() made changes. package uses pkgdown. Running pkgdown::build_site() refresh .","code":""},{"path":[]},{"path":"/reference/ahg_estimate.html","id":null,"dir":"Reference","previous_headings":"","what":"Properly estimate AHG values — ahg_estimate","title":"Properly estimate AHG values — ahg_estimate","text":"Properly estimate AHG values","code":""},{"path":"/reference/ahg_estimate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Properly estimate AHG values — ahg_estimate","text":"","code":"ahg_estimate(   df,   allowance = 0.05,   gen = 192,   pop = 200,   cprob = 0.4,   mprob = 0.4,   times = 1,   scale = 1.5,   full_fitting = FALSE,   verbose = FALSE )"},{"path":"/reference/ahg_estimate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Properly estimate AHG values — ahg_estimate","text":"df hydraulic data.frame columns named (Q, V, TW, Y). Q least one required. allowance allowed deviation continuity gen Number generations breed. pop Size population cprob Crossover probability mprob Mutation probability times many times (seeds) nsga2 run scale scale factor applied data pre NSGA-2 fitting full_fitting fits returned? verbose messages emitted?","code":""},{"path":"/reference/ahg_estimate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Properly estimate AHG values — ahg_estimate","text":"list","code":""},{"path":[]},{"path":"/reference/best_optimal.html","id":null,"dir":"Reference","previous_headings":"","what":"Report best optimal — best_optimal","title":"Report best optimal — best_optimal","text":"Report best optimal","code":""},{"path":"/reference/best_optimal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Report best optimal — best_optimal","text":"","code":"best_optimal(best, check, verbose = TRUE)"},{"path":"/reference/best_optimal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Report best optimal — best_optimal","text":"best best performing method (character string) check values check verbose messages emitted","code":""},{"path":"/reference/best_optimal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Report best optimal — best_optimal","text":"vector","code":""},{"path":[]},{"path":"/reference/calc_nsga.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate NSGA2 AHG — calc_nsga","title":"Calculate NSGA2 AHG — calc_nsga","text":"Calculate NSGA2 AHG","code":""},{"path":"/reference/calc_nsga.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate NSGA2 AHG — calc_nsga","text":"","code":"calc_nsga(   df,   allowance = 0.05,   r,   scale = 2,   gen = 96,   pop = 500,   cprob = 0.8,   mprob = 0.05,   times = 1 )"},{"path":"/reference/calc_nsga.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate NSGA2 AHG — calc_nsga","text":"df hydraulic data.frame allowance allowable deviation continuity r fit list scale scale factor applied data pre NSGA-2 fitting gen Number generations breed. pop Size population cprob Crossover probability mprob Mutation probability times many times (seeds) nsga2 run","code":""},{"path":"/reference/calc_nsga.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate NSGA2 AHG — calc_nsga","text":"data.frame","code":""},{"path":[]},{"path":"/reference/compute_ahg.html","id":null,"dir":"Reference","previous_headings":"","what":"Approximate AHG relationships — compute_ahg","title":"Approximate AHG relationships — compute_ahg","text":"Approximate AHG relationships using OLS NLS methods","code":""},{"path":"/reference/compute_ahg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Approximate AHG relationships — compute_ahg","text":"","code":"compute_ahg(Q, P, type = \"relation\")"},{"path":"/reference/compute_ahg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Approximate AHG relationships — compute_ahg","text":"Q stream flow time series P corresponding time series second hydraulic variable type relationship tested","code":""},{"path":"/reference/compute_ahg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Approximate AHG relationships — compute_ahg","text":"data.frame","code":""},{"path":[]},{"path":"/reference/compute_channel_slope.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the slope of 3D linestring — compute_channel_slope","title":"Calculate the slope of 3D linestring — compute_channel_slope","text":"Given sf object 'XYZ' coordinates, return vector numeric values representing average slope linestring sf data frame input. default calculates  slope using `slope_weighted()`. can also use `slope_mean()` function takes inputs functions.","code":""},{"path":"/reference/compute_channel_slope.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the slope of 3D linestring — compute_channel_slope","text":"","code":"compute_channel_slope(path, fun = slope_weighted, directed = FALSE)"},{"path":"/reference/compute_channel_slope.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the slope of 3D linestring — compute_channel_slope","text":"path XYZ LINESTRING representing path travel fun slope function calculate per element, `slope_weighted` default. directed value directed? `FALSE` default. `TRUE` result negative represents downslope (end point lower start point).","code":""},{"path":"/reference/compute_channel_slope.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the slope of 3D linestring — compute_channel_slope","text":"vector slopes associated linear element   value proportion representing change elevation   given change horizontal distance.","code":""},{"path":[]},{"path":"/reference/compute_hydraulic_params.html","id":null,"dir":"Reference","previous_headings":"","what":"Approximate channel coeffiecent — compute_hydraulic_params","title":"Approximate channel coeffiecent — compute_hydraulic_params","text":"Approximate hydraulic values AHG fit","code":""},{"path":"/reference/compute_hydraulic_params.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Approximate channel coeffiecent — compute_hydraulic_params","text":"","code":"compute_hydraulic_params(fit)"},{"path":"/reference/compute_hydraulic_params.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Approximate channel coeffiecent — compute_hydraulic_params","text":"fit output ahg_estimate","code":""},{"path":"/reference/compute_hydraulic_params.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Approximate channel coeffiecent — compute_hydraulic_params","text":"numeric","code":""},{"path":[]},{"path":"/reference/compute_n.html","id":null,"dir":"Reference","previous_headings":"","what":"Approximate Roughness — compute_n","title":"Approximate Roughness — compute_n","text":"Approximate median roughness using Manning Equation","code":""},{"path":"/reference/compute_n.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Approximate Roughness — compute_n","text":"","code":"compute_n(df, S = 0.02)"},{"path":"/reference/compute_n.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Approximate Roughness — compute_n","text":"df data.frame least Y V. S reach scale longitudinal slope (m/m). Default mean nhdplusV2","code":""},{"path":"/reference/compute_n.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Approximate Roughness — compute_n","text":"numeric","code":""},{"path":[]},{"path":"/reference/cross_section.html","id":null,"dir":"Reference","previous_headings":"","what":"Approximate channel shape — cross_section","title":"Approximate channel shape — cross_section","text":"Get list points x axis cross section max depth produce depth values points based channel shape","code":""},{"path":"/reference/cross_section.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Approximate channel shape — cross_section","text":"","code":"cross_section(r, TW = 30, Ymax = 2, n = 30)"},{"path":"/reference/cross_section.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Approximate channel shape — cross_section","text":"r corresponding Dingman's r coefficient TW width channel bankfull Ymax maximum depth channel bankfull n number points construct XS","code":""},{"path":"/reference/cross_section.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Approximate channel shape — cross_section","text":"depth values every 1m along cross section","code":""},{"path":[]},{"path":"/reference/date_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Implements filtering by date — date_filter","title":"Implements filtering by date — date_filter","text":"Data filtered beyond specified year threshold (e.g. 5 years old). relative date based newest observation data set. Optionally, maximum flow (Q) record can retained.","code":""},{"path":"/reference/date_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Implements filtering by date — date_filter","text":"","code":"date_filter(df, years, keep_max = FALSE)"},{"path":"/reference/date_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Implements filtering by date — date_filter","text":"df data.frame least date Q field. years number allowed history keep_max largest flow record kept, even older \"years\"","code":""},{"path":"/reference/date_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Implements filtering by date — date_filter","text":"data.frame","code":""},{"path":[]},{"path":"/reference/extract_thalweg.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Thalweg From a data.frame of cross sections, a classified thalweg can be extracted as the connected LINESTRING — extract_thalweg","title":"Extract Thalweg From a data.frame of cross sections, a classified thalweg can be extracted as the connected LINESTRING — extract_thalweg","text":"Extract Thalweg data.frame cross sections, classified thalweg can extracted connected LINESTRING","code":""},{"path":"/reference/extract_thalweg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Thalweg From a data.frame of cross sections, a classified thalweg can be extracted as the connected LINESTRING — extract_thalweg","text":"","code":"extract_thalweg(xs, crs = 5070)"},{"path":"/reference/extract_thalweg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Thalweg From a data.frame of cross sections, a classified thalweg can be extracted as the connected LINESTRING — extract_thalweg","text":"xs data.frame containing cross sectional data. Required columns hf_id, cs_id, X, Y, Z crs CRS XY coordinates","code":""},{"path":"/reference/extract_thalweg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Thalweg From a data.frame of cross sections, a classified thalweg can be extracted as the connected LINESTRING — extract_thalweg","text":"XYZ LINESTRING object","code":""},{"path":[]},{"path":"/reference/mad_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Implements filtering by median absolute deviation — mad_filter","title":"Implements filtering by median absolute deviation — mad_filter","text":"iterative outlier detection procedure run based linear regression residuals. Values log-transformed TW, V, Y residuals falling outside specified median absolute deviation (MAD) envelope excluded. Regression coefficients recalculated outlier detection procedure reapplied outliers detected. method identified HyG","code":""},{"path":"/reference/mad_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Implements filtering by median absolute deviation — mad_filter","text":"","code":"mad_filter(df, envelope = 3)"},{"path":"/reference/mad_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Implements filtering by median absolute deviation — mad_filter","text":"df data.frame least Q one AHG field (Y. TW, V). envelope MAD envelope","code":""},{"path":"/reference/mad_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Implements filtering by median absolute deviation — mad_filter","text":"data.frame","code":""},{"path":[]},{"path":"/reference/min_max.html","id":null,"dir":"Reference","previous_headings":"","what":"Find thresholds for coefficient and exponent limits. — min_max","title":"Find thresholds for coefficient and exponent limits. — min_max","text":"Find thresholds coefficient exponent limits.","code":""},{"path":"/reference/min_max.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find thresholds for coefficient and exponent limits. — min_max","text":"","code":"min_max(df, scale = 2)"},{"path":"/reference/min_max.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find thresholds for coefficient and exponent limits. — min_max","text":"df hydraulic data.frame scale Scale set factor. limits exponent coefficients range (1/s) * nls; s * nls","code":""},{"path":"/reference/min_max.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find thresholds for coefficient and exponent limits. — min_max","text":"list","code":""},{"path":[]},{"path":"/reference/mismash.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute all combos! — mismash","title":"Compute all combos! — mismash","text":"Compute combos!","code":""},{"path":"/reference/mismash.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute all combos! — mismash","text":"","code":"mismash(v, V, TW, Y, Q, r, allowance)"},{"path":"/reference/mismash.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute all combos! — mismash","text":"v values V Velocity time series TW Top width time series Y Depth time series Q Discharge time series r rrr TODO allowance Allowable deviation continuity","code":""},{"path":"/reference/mismash.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute all combos! — mismash","text":"list","code":""},{"path":[]},{"path":"/reference/nls_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Implements NLS filtering — nls_filter","title":"Implements NLS filtering — nls_filter","text":"NLS fit provides best relation relation fit. provided relationship, NLS fit computed used estimate predicted V,TW,Y given Q. actual value outside specified allowance removed.","code":""},{"path":"/reference/nls_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Implements NLS filtering — nls_filter","text":"","code":"nls_filter(df, allowance = 0.5)"},{"path":"/reference/nls_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Implements NLS filtering — nls_filter","text":"df data.frame least Q one AHG field (Y. TW, V). allowance much deviation observed allowed (default = .5)","code":""},{"path":"/reference/nls_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Implements NLS filtering — nls_filter","text":"data.frame","code":""},{"path":[]},{"path":"/reference/nrmse.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalized Root Mean Square Error — nrmse","title":"Normalized Root Mean Square Error — nrmse","text":"Normalized root mean square error (NRMSE) sim obs, treatment missing values","code":""},{"path":"/reference/nrmse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalized Root Mean Square Error — nrmse","text":"","code":"nrmse(sim, obs)"},{"path":"/reference/nrmse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalized Root Mean Square Error — nrmse","text":"sim numeric vector simulated values obs numeric vector observed values","code":""},{"path":"/reference/nrmse.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalized Root Mean Square Error — nrmse","text":"numeric","code":""},{"path":[]},{"path":"/reference/nwis.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample gage data Manual measurements made at NWIS site 01096500 Q_cms is a mandatory argument and at least one of TW_m, V_ms, or Y_m. — nwis","title":"Sample gage data Manual measurements made at NWIS site 01096500 Q_cms is a mandatory argument and at least one of TW_m, V_ms, or Y_m. — nwis","text":"Sample gage data Manual measurements made NWIS site 01096500 Q_cms mandatory argument least one TW_m, V_ms, Y_m.","code":""},{"path":"/reference/nwis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample gage data Manual measurements made at NWIS site 01096500 Q_cms is a mandatory argument and at least one of TW_m, V_ms, or Y_m. — nwis","text":"","code":"nwis"},{"path":"/reference/nwis.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Sample gage data Manual measurements made at NWIS site 01096500 Q_cms is a mandatory argument and at least one of TW_m, V_ms, or Y_m. — nwis","text":"data frame 245 rows 6 columns: siteID NWIS ID date date measurement Q_cms Steamflow (cubic meters per second) Y_m Depth (meters) V_ms Velocity (meters per second) TW_m Top width (meters)","code":""},{"path":"/reference/pbias.html","id":null,"dir":"Reference","previous_headings":"","what":"Percent Bias — pbias","title":"Percent Bias — pbias","text":"Percent Bias sim obs, treatment missing values.","code":""},{"path":"/reference/pbias.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Percent Bias — pbias","text":"","code":"pbias(sim, obs)"},{"path":"/reference/pbias.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Percent Bias — pbias","text":"sim numeric vector simulated values obs numeric vector observed values","code":""},{"path":"/reference/pbias.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Percent Bias — pbias","text":"numeric","code":""},{"path":[]},{"path":"/reference/qva_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Implements filtering by continuity — qva_filter","title":"Implements filtering by continuity — qva_filter","text":"function tests measured Q outside expected range based product measured velocity, top-width, depth (e.g. Q≠vA)","code":""},{"path":"/reference/qva_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Implements filtering by continuity — qva_filter","text":"","code":"qva_filter(df, allowance = 0.05)"},{"path":"/reference/qva_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Implements filtering by continuity — qva_filter","text":"df data.frame Q, Y, TW, V field. allowance much deviation equality allowed (default = .05)","code":""},{"path":"/reference/qva_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Implements filtering by continuity — qva_filter","text":"data.frame","code":""},{"path":[]},{"path":"/reference/significance_check.html","id":null,"dir":"Reference","previous_headings":"","what":"Implements significance check — significance_check","title":"Implements significance check — significance_check","text":"relationship supplied log transformed variables computed. p-value less supplied p-value error message emitted.","code":""},{"path":"/reference/significance_check.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Implements significance check — significance_check","text":"","code":"significance_check(df, pvalue = 0.05)"},{"path":"/reference/significance_check.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Implements significance check — significance_check","text":"df data.frame least Q one AHG field (Y. TW, V). pvalue Significant p-value (default = .05)","code":""},{"path":"/reference/significance_check.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Implements significance check — significance_check","text":"data.frame","code":""},{"path":[]},{"path":"/reference/slope_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the gradient of line segments from a 3D matrix of coordinates — slope_matrix","title":"Calculate the gradient of line segments from a 3D matrix of coordinates — slope_matrix","text":"Calculate gradient line segments 3D matrix coordinates","code":""},{"path":"/reference/slope_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the gradient of line segments from a 3D matrix of coordinates — slope_matrix","text":"","code":"slope_matrix(mat, lonlat = TRUE)  slope_weighted(mat, lonlat = TRUE, directed = FALSE)  slope_mean(mat, lonlat = TRUE, directed = FALSE)"},{"path":"/reference/slope_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the gradient of line segments from a 3D matrix of coordinates — slope_matrix","text":"mat Matrix containing coordinates elevations. matrix three columns: X, Y, Z. data geographic coordinates, Z values assumed meters. data projected coordinates, Z values assumed units X Y coordinates. lonlat elements provided longitude/latitude coordinates? default, value CRS routes (`sf::st_is_longlat(...)`).","code":""},{"path":"/reference/slope_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the gradient of line segments from a 3D matrix of coordinates — slope_matrix","text":"vector slopes associated LINE element   output value proportion representing change elevation   given change horizontal distance.","code":""},{"path":[]}]
